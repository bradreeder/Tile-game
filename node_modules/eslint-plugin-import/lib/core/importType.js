'use strict';

exports.__esModule = true;
exports.isBuiltIn = isBuiltIn;
exports.default = resolveImportType;

var _lodash = require('lodash.cond');

var _lodash2 = _interopRequireDefault(_lodash);

var _builtinModules = require('builtin-modules');

var _builtinModules2 = _interopRequireDefault(_builtinModules);

var _path = require('path');

var _resolve = require('./resolve');

var _resolve2 = _interopRequireDefault(_resolve);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constant(value) {
  return function () {
    return value;
  };
}

function isBuiltIn(name, settings) {
  var extras = settings && settings['import/core-modules'] || [];
  return _builtinModules2.default.indexOf(name) !== -1 || extras.indexOf(name) > -1;
}

var externalModuleRegExp = /^\w/;
function isExternalModule(name, settings, path) {
  if (!externalModuleRegExp.test(name)) return false;
  return !path || -1 < path.indexOf((0, _path.join)('node_modules', name));
}

var scopedRegExp = /^@\w+\/\w+/;
function isScoped(name) {
  return scopedRegExp.test(name);
}

function isInternalModule(name, settings, path) {
  if (!externalModuleRegExp.test(name)) return false;
  return path && -1 === path.indexOf((0, _path.join)('node_modules', name));
}

function isRelativeToParent(name) {
  return name.indexOf('../') === 0;
}

var indexFiles = ['.', './', './index', './index.js'];
function isIndex(name) {
  return indexFiles.indexOf(name) !== -1;
}

function isRelativeToSibling(name) {
  return name.indexOf('./') === 0;
}

var typeTest = (0, _lodash2.default)([[isBuiltIn, constant('builtin')], [isExternalModule, constant('external')], [isScoped, constant('external')], [isInternalModule, constant('internal')], [isRelativeToParent, constant('parent')], [isIndex, constant('index')], [isRelativeToSibling, constant('sibling')], [constant(true), constant('unknown')]]);

function resolveImportType(name, context) {
  return typeTest(name, context.settings, (0, _resolve2.default)(name, context));
}
//# sourceMappingURL=data:application/json;base64,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QUFkLENBQWpDLENBQVAsQ0FEdUQ7Q0FBMUMiLCJmaWxlIjoiY29yZS9pbXBvcnRUeXBlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNvbmQgZnJvbSAnbG9kYXNoLmNvbmQnXG5pbXBvcnQgYnVpbHRpbk1vZHVsZXMgZnJvbSAnYnVpbHRpbi1tb2R1bGVzJ1xuaW1wb3J0IHsgam9pbiB9IGZyb20gJ3BhdGgnXG5cbmltcG9ydCByZXNvbHZlIGZyb20gJy4vcmVzb2x2ZSdcblxuZnVuY3Rpb24gY29uc3RhbnQodmFsdWUpIHtcbiAgcmV0dXJuICgpID0+IHZhbHVlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc0J1aWx0SW4obmFtZSwgc2V0dGluZ3MpIHtcbiAgY29uc3QgZXh0cmFzID0gKHNldHRpbmdzICYmIHNldHRpbmdzWydpbXBvcnQvY29yZS1tb2R1bGVzJ10pIHx8IFtdXG4gIHJldHVybiBidWlsdGluTW9kdWxlcy5pbmRleE9mKG5hbWUpICE9PSAtMSB8fCBleHRyYXMuaW5kZXhPZihuYW1lKSA+IC0xXG59XG5cbmNvbnN0IGV4dGVybmFsTW9kdWxlUmVnRXhwID0gL15cXHcvXG5mdW5jdGlvbiBpc0V4dGVybmFsTW9kdWxlKG5hbWUsIHNldHRpbmdzLCBwYXRoKSB7XG4gIGlmICghZXh0ZXJuYWxNb2R1bGVSZWdFeHAudGVzdChuYW1lKSkgcmV0dXJuIGZhbHNlXG4gIHJldHVybiAoIXBhdGggfHwgLTEgPCBwYXRoLmluZGV4T2Yoam9pbignbm9kZV9tb2R1bGVzJywgbmFtZSkpKVxufVxuXG5jb25zdCBzY29wZWRSZWdFeHAgPSAvXkBcXHcrXFwvXFx3Ky9cbmZ1bmN0aW9uIGlzU2NvcGVkKG5hbWUpIHtcbiAgcmV0dXJuIHNjb3BlZFJlZ0V4cC50ZXN0KG5hbWUpXG59XG5cbmZ1bmN0aW9uIGlzSW50ZXJuYWxNb2R1bGUobmFtZSwgc2V0dGluZ3MsIHBhdGgpIHtcbiAgaWYgKCFleHRlcm5hbE1vZHVsZVJlZ0V4cC50ZXN0KG5hbWUpKSByZXR1cm4gZmFsc2VcbiAgcmV0dXJuIChwYXRoICYmIC0xID09PSBwYXRoLmluZGV4T2Yoam9pbignbm9kZV9tb2R1bGVzJywgbmFtZSkpKVxufVxuXG5mdW5jdGlvbiBpc1JlbGF0aXZlVG9QYXJlbnQobmFtZSkge1xuICByZXR1cm4gbmFtZS5pbmRleE9mKCcuLi8nKSA9PT0gMFxufVxuXG5jb25zdCBpbmRleEZpbGVzID0gWycuJywgJy4vJywgJy4vaW5kZXgnLCAnLi9pbmRleC5qcyddXG5mdW5jdGlvbiBpc0luZGV4KG5hbWUpIHtcbiAgcmV0dXJuIGluZGV4RmlsZXMuaW5kZXhPZihuYW1lKSAhPT0gLTFcbn1cblxuZnVuY3Rpb24gaXNSZWxhdGl2ZVRvU2libGluZyhuYW1lKSB7XG4gIHJldHVybiBuYW1lLmluZGV4T2YoJy4vJykgPT09IDBcbn1cblxuY29uc3QgdHlwZVRlc3QgPSBjb25kKFtcbiAgW2lzQnVpbHRJbiwgY29uc3RhbnQoJ2J1aWx0aW4nKV0sXG4gIFtpc0V4dGVybmFsTW9kdWxlLCBjb25zdGFudCgnZXh0ZXJuYWwnKV0sXG4gIFtpc1Njb3BlZCwgY29uc3RhbnQoJ2V4dGVybmFsJyldLFxuICBbaXNJbnRlcm5hbE1vZHVsZSwgY29uc3RhbnQoJ2ludGVybmFsJyldLFxuICBbaXNSZWxhdGl2ZVRvUGFyZW50LCBjb25zdGFudCgncGFyZW50JyldLFxuICBbaXNJbmRleCwgY29uc3RhbnQoJ2luZGV4JyldLFxuICBbaXNSZWxhdGl2ZVRvU2libGluZywgY29uc3RhbnQoJ3NpYmxpbmcnKV0sXG4gIFtjb25zdGFudCh0cnVlKSwgY29uc3RhbnQoJ3Vua25vd24nKV0sXG5dKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXNvbHZlSW1wb3J0VHlwZShuYW1lLCBjb250ZXh0KSB7XG4gIHJldHVybiB0eXBlVGVzdChuYW1lLCBjb250ZXh0LnNldHRpbmdzLCByZXNvbHZlKG5hbWUsIGNvbnRleHQpKVxufVxuIl19